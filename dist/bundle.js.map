{"version":3,"sources":["webpack:///webpack/bootstrap ede6ed5331c4e8b7ae88","webpack:///./src/index.js","webpack:///./src/squigglies.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO,OAAO;;AAEd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;;;;;;;AC/BA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,qE","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ede6ed5331c4e8b7ae88","import Squigglies from './squigglies';\n\nconst angleInRadians = angle => angle * (Math.PI / 180);\nconst angleInDegrees = radian => radian * (180 / Math.PI);\n\nconst canvas = document.getElementById('canvas');\nconst ctx = canvas.getContext('2d');\nconst { Draw } = Squigglies(ctx);\n\nctx.fillStyle = 'black';\nctx.strokeStyle = 'black';\n\nconst d = new Draw(Math.random()*canvas.width, 50);\nd.update = function update() {\n  this.step +=2\n  this.x = this.startX + (this.step*2)+Math.cos(angleInRadians(this.step*5))*5\n  this.y = this.startY + (this.step)+Math.sin(angleInRadians(this.step*5))*5;\n  ctx.fillRect(this.x, this.y, 5, 5);\n};\n//d.render();\n\n// */\n/*\nconst f = new Draw(150, 70);\nf.update = function update() {\n  ctx.clearRect(this.x, this.y, 5, 5);\n  this.x += 2;\n  this.y += 2;\n  ctx.fillRect(this.x, this.y, 5, 5);\n};\nf.render();\n// */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0","const fps = 30;\nconst interval = 1000 / fps;\n\nfunction Squigglies(ctx) {\n\n  function clearCanvas() {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  }\n\n  return {\n    Draw: function inner(startX, startY) {\n      let now;\n      let then = Date.now();\n      let delta;\n\n      this.startX = startX;\n      this.startY = startY;\n      this.x = startX;\n      this.y = startY;\n      this.step = 0;\n      this.ctx = ctx;\n\n      this.update = () => {\n        console.log('update');\n      };\n\n      this.render = () => {\n        requestAnimationFrame(this.render.bind(this));\n        now = Date.now();\n        delta = now - then;\n        if (delta > interval) {\n          // update time stuffs\n\n          then = now - (delta % interval);\n          // ... Code for Drawing the Frame ...\n          clearCanvas();\n          this.update();\n        }\n      };\n      return this;\n    },\n  };\n}\n\nexport default Squigglies;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/squigglies.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}